// Code generated by protoc-gen-go.
// source: godrone.proto
// DO NOT EDIT!

/*
Package godrone is a generated protocol buffer package.

It is generated from these files:
	godrone.proto

It has these top-level messages:
	PutRequest
	PutResponse
*/
package godrone

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PutRequest struct {
	KeySapce string `protobuf:"bytes,1,opt,name=keySapce" json:"keySapce,omitempty"`
	Key      string `protobuf:"bytes,2,opt,name=key" json:"key,omitempty"`
	Value    string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (m *PutRequest) Reset()                    { *m = PutRequest{} }
func (m *PutRequest) String() string            { return proto.CompactTextString(m) }
func (*PutRequest) ProtoMessage()               {}
func (*PutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PutResponse struct {
	Key     string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
}

func (m *PutResponse) Reset()                    { *m = PutResponse{} }
func (m *PutResponse) String() string            { return proto.CompactTextString(m) }
func (*PutResponse) ProtoMessage()               {}
func (*PutResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*PutRequest)(nil), "godrone.PutRequest")
	proto.RegisterType((*PutResponse)(nil), "godrone.PutResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for CacheOps service

type CacheOpsClient interface {
	// Sends a greeting
	Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error)
}

type cacheOpsClient struct {
	cc *grpc.ClientConn
}

func NewCacheOpsClient(cc *grpc.ClientConn) CacheOpsClient {
	return &cacheOpsClient{cc}
}

func (c *cacheOpsClient) Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error) {
	out := new(PutResponse)
	err := grpc.Invoke(ctx, "/godrone.CacheOps/Put", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CacheOps service

type CacheOpsServer interface {
	// Sends a greeting
	Put(context.Context, *PutRequest) (*PutResponse, error)
}

func RegisterCacheOpsServer(s *grpc.Server, srv CacheOpsServer) {
	s.RegisterService(&_CacheOps_serviceDesc, srv)
}

func _CacheOps_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CacheOpsServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/godrone.CacheOps/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CacheOpsServer).Put(ctx, req.(*PutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CacheOps_serviceDesc = grpc.ServiceDesc{
	ServiceName: "godrone.CacheOps",
	HandlerType: (*CacheOpsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Put",
			Handler:    _CacheOps_Put_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("godrone.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 175 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x4d, 0xcf, 0x4f, 0x29,
	0xca, 0xcf, 0x4b, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0x02, 0xb8,
	0xb8, 0x02, 0x4a, 0x4b, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0xa4, 0xb8, 0x38, 0xb2,
	0x53, 0x2b, 0x83, 0x13, 0x0b, 0x92, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xe0, 0x7c,
	0x21, 0x01, 0x2e, 0x66, 0x20, 0x5b, 0x82, 0x09, 0x2c, 0x0c, 0x62, 0x0a, 0x89, 0x70, 0xb1, 0x96,
	0x25, 0xe6, 0x94, 0xa6, 0x4a, 0x30, 0x83, 0xc5, 0x20, 0x1c, 0x25, 0x4b, 0x2e, 0x6e, 0xb0, 0x89,
	0xc5, 0x05, 0xf9, 0x79, 0xc5, 0x70, 0x6d, 0x8c, 0x08, 0x6d, 0x12, 0x5c, 0xec, 0xc5, 0xa5, 0xc9,
	0xc9, 0xa9, 0xc5, 0xc5, 0x60, 0xc3, 0x38, 0x82, 0x60, 0x5c, 0x23, 0x3b, 0x2e, 0x0e, 0xe7, 0xc4,
	0xe4, 0x8c, 0x54, 0xff, 0x82, 0x62, 0x21, 0x23, 0x2e, 0x66, 0xa0, 0x31, 0x42, 0xc2, 0x7a, 0x30,
	0x87, 0x23, 0x9c, 0x29, 0x25, 0x82, 0x2a, 0x08, 0xb1, 0x49, 0x89, 0x21, 0x89, 0x0d, 0xec, 0x39,
	0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb5, 0x7f, 0x45, 0xb5, 0xed, 0x00, 0x00, 0x00,
}
